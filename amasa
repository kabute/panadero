#!/bin/bash

SED="sed"
FIND="find"

# OSX require GNU sed and find
if [[ "$OSTYPE" == "darwin*" ]]; then
  SED="gsed"
  FIND="gfind"
fi

function check_path(){
    path=$1
    path_exist=0

    if [ -d "${path}" ];then
        (( path_exist=1 ))
    fi

    echo ${path_exist}
}


# Copy base files of project and prepare them
function create_skel_base(){
    cp ./skel/base/* "$1"

}

# Create a really basic module
function create_skel_module(){
    cp ./skel/module/__init__.py "$1"/"$2"
    cp ./skel/module/basic_class.py "$1"/"$2"/"$2".py

}
function create_skel_test(){
    cp ./skel/tests/tox/* "$1"

    mkdir "$1"/tests
    cp ./skel/tests/tests/* "$1"/tests

}

function parse_templates(){
    for file in $($FIND "$1" -type f );do
        $SED -i -e "s/##PROJECT##/$2/g" "$file"
    done
}

function create_virtualenv(){
    cd "$1" || exit
    virtualenv .
    cd - || exit
}

if [ $# -ne 2 ];then
    echo "Wrong Syntax!"
    echo "Syntax: ${0} [PROJECT_BASE_PATH] [PROJECT_NAME]"
    exit 1
fi

if [ "$(check_path "$1")" -eq 1 ];then
    this_path=$(pwd)
    project_path=${1}/${2}/src

    if [ ! -d "${project_path}" ];then
        # Needed directories for project can be created
        mkdir -p "${project_path}"
        mkdir -p "${project_path}"/"${2}"

        create_virtualenv "${1}"/"${2}"
        create_skel_base "${project_path}" "${2}"
        create_skel_module "${project_path}" "${2}"
        create_skel_test "${project_path}" "${2}"

        parse_templates "${project_path}" "${2}"

        # Enable virtualenv and build and run project
        echo " >> BUILDING AND RUNNING PACKAGE:"
        echo " "
        echo " "
        cd "${project_path}" || exit

        # This script belongs to virtualenv, not testing
        # shellcheck disable=SC1091
        source ../bin/activate
        pip install -e .
        ${2}
        echo " "
        echo " "

	cd "${project_path}" || exit
	tox

	cd "${this_path}" || exit

	echo " "
	echo ">> Your new project is ready on ${project_path}/${2}"
	echo " "
	echo "* Please complete the README.md"
	echo "* Plase remember this also contains a virtualenv for running the code."
	echo " "

    else
        echo "ERROR: Project already exist! (${project_path})"
        exit 1
    fi

fi
